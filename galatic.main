do local userInputService=game:GetService("UserInputService");local player=game.Players.LocalPlayer;local Players=game:GetService("Players");local RunService=game:GetService("RunService");local Camera=game:GetService("Workspace").CurrentCamera;local LocalPlayer=Players.LocalPlayer;local Bracket=loadstring(game:HttpGet("https://raw.githubusercontent.com/AlexR32/Bracket/main/BracketV33.lua"))();local Window=Bracket:Window({Name="Galactic | Criminality Version 1.0.2",Enabled=true,Color=Color3.fromRGB(148,0,211),Size=UDim2.new(0,500,0,650),Position=UDim2.new(0.5, -248,0.5, -248)});local Tab1=Window:Tab({Name="Main Configuration"});local Divider=Tab1:Divider({Text="Aim Modification",Side="Left"});local Divider=Tab1:Divider({Text="Silent Modification",Side="Right"});local Aimlock=Tab1:Section({Name="Aimlock",Side="Left"});local Silent=Tab1:Section({Name="Silent Aim",Side="Right"});local Players=game:GetService("Players");local RunService=game:GetService("RunService");local UserInputService=game:GetService("UserInputService");local Camera=workspace.CurrentCamera;local LocalPlayer=Players.LocalPlayer;local Workspace=game:GetService("Workspace");local AimlockEnabled=false;local AimlockTarget=nil;local AimRadius=100;local HoldingMB2=false;local HighlightEnabled=false;local NotificationEnabled=true;local WallCheckEnabled=true;local IgnoreDeadPlayers=true;local WeaponBasedAdjustment=true;local TargetSwitchingEnabled=true;local WhitelistFriends=false;local AimPart="Head";local PredictionStrength=0.15;local Highlight=Instance.new("Highlight");Highlight.Parent=game.CoreGui;Highlight.DepthMode=Enum.HighlightDepthMode.AlwaysOnTop;Highlight.FillColor=Color3.fromRGB(255,0,0);Highlight.OutlineColor=Color3.fromRGB(255,255,255);Highlight.FillTransparency=0.5;local AimlockToggle=Aimlock:Toggle({Name="Aimlock",CurrentValue=false,Flag="AimlockToggle",Callback=function(Value) AimlockEnabled=Value;if  not Value then Highlight.Adornee=nil;end end});local HighlightToggle=Aimlock:Toggle({Name="Highlight Target",CurrentValue=false,Flag="HighlightToggle",Callback=function(Value) HighlightEnabled=Value;if  not Value then Highlight.Adornee=nil;end end});local NotificationToggle=Aimlock:Toggle({Name="Show Notifications",CurrentValue=true,Flag="NotificationToggle",Callback=function(Value) NotificationEnabled=Value;end});local WallCheckToggle=Aimlock:Toggle({Name="Wall Check",CurrentValue=true,Flag="WallCheckToggle",Callback=function(Value) WallCheckEnabled=Value;end});local IgnoreDeadToggle=Aimlock:Toggle({Name="Ignore Dead Players",CurrentValue=true,Flag="IgnoreDeadToggle",Callback=function(Value) IgnoreDeadPlayers=Value;end});local WeaponAdjustmentToggle=Aimlock:Toggle({Name="Weapon-Based Aim Adjustment",CurrentValue=true,Flag="WeaponAdjustmentToggle",Callback=function(Value) WeaponBasedAdjustment=Value;end});local TargetSwitchingToggle=Aimlock:Toggle({Name="Target Switching",CurrentValue=true,Flag="TargetSwitchingToggle",Callback=function(Value) TargetSwitchingEnabled=Value;end});local WhitelistFriendsToggle=Aimlock:Toggle({Name="Whitelist Friends",CurrentValue=false,Flag="WhitelistFriendsToggle",Callback=function(Value) WhitelistFriends=Value;end});local AimPartDropdown=Aimlock:Dropdown({Name="Aim Part",Flag="AimPartDropdown",Side="Left",List={{Name="Head",Mode="Button",Value=false,Callback=function(Selected) AimPart="Head";end},{Name="HumanoidRootPart",Mode="Button",Value=false,Callback=function(Selected) AimPart="HumanoidRootPart";end}}});local function IsVisible(target) if  not WallCheckEnabled then return true;end local origin=Camera.CFrame.Position;local direction=(target.Position-origin).Unit * (target.Position-origin).Magnitude ;local raycastParams=RaycastParams.new();raycastParams.FilterDescendantsInstances={LocalPlayer.Character};raycastParams.FilterType=Enum.RaycastFilterType.Blacklist;local result=Workspace:Raycast(origin,direction,raycastParams);return (result==nil) or result.Instance:IsDescendantOf(target.Parent) ;end local function GetNearestTarget() local closestTarget=nil;local shortestDistance=AimRadius;for _,player in pairs(Players:GetPlayers()) do if ((player~=LocalPlayer) and player.Character and player.Character:FindFirstChild(AimPart)) then if (IgnoreDeadPlayers and player.Character:FindFirstChild("Humanoid") and (player.Character.Humanoid.Health<=0)) then continue;end if (WhitelistFriends and player:IsFriendsWith(LocalPlayer.UserId)) then continue;end local targetPart=player.Character[AimPart];if IsVisible(targetPart) then local screenPoint,onScreen=Camera:WorldToViewportPoint(targetPart.Position);local distance=(Vector2.new(screenPoint.X,screenPoint.Y) -Vector2.new(UserInputService:GetMouseLocation().X,UserInputService:GetMouseLocation().Y)).Magnitude;if (onScreen and (distance<shortestDistance)) then closestTarget=player;shortestDistance=distance;end end end end return closestTarget;end RunService.RenderStepped:Connect(function() if (AimlockEnabled and HoldingMB2 and AimlockTarget and AimlockTarget.Character and AimlockTarget.Character:FindFirstChild(AimPart)) then local targetPart=AimlockTarget.Character[AimPart];local predictedPosition=targetPart.Position;local targetVelocity=(AimlockTarget.Character:FindFirstChild("HumanoidRootPart") and AimlockTarget.Character.HumanoidRootPart.Velocity) or Vector3.new(0,0,0) ;predictedPosition=predictedPosition + (targetVelocity * PredictionStrength) ;Camera.CFrame=CFrame.new(Camera.CFrame.Position,predictedPosition);end end);local Players=game:GetService("Players");local RunService=game:GetService("RunService");local ReplicatedStorage=game:GetService("ReplicatedStorage");local Camera=workspace.CurrentCamera;local LocalPlayer=Players.LocalPlayer;local InputService=game:GetService("UserInputService");local SilentAimEnabled=false;local FOVToggle=false;local FilledFOV=false;local AimPart="Head";local FOVSize=100;local HitChance=50;local FOVTransparency=100;local Toggle_SilentAim=Silent:Toggle({Name="Silent Aim",Flag="SilentAimToggle",CurrentValue=false,Callback=function(state) SilentAimEnabled=state;end});local Toggle_FOV=Silent:Toggle({Name="FOV Toggle",Flag="FOVToggle",CurrentValue=false,Callback=function(state) FOVToggle=state;end});local Toggle_FilledFOV=Silent:Toggle({Name="Filled FOV",Flag="FilledFOVToggle",CurrentValue=false,Callback=function(state) FilledFOV=state;FOVCircle.Filled=FilledFOV;end});local Dropdown_AimPart=Silent:Dropdown({Name="Aim Part",Flag="AimPartDropdown",Side="Left",List={{Name="Head",Mode="Toggle",Value=false,Callback=function() AimPart="Head";end},{Name="HumanoidRootPart",Mode="Toggle",Value=false,Callback=function() AimPart="HumanoidRootPart";end}}});local Slider_FOVSize=Silent:Slider({Name="FOV Size",Flag="FOVSizeSlider",Range={100,300},Increment=1,CurrentValue=100,Callback=function(value) FOVSize=value;FOVCircle.Radius=FOVSize;end});local Slider_HitChance=Silent:Slider({Name="Hit Chance",Flag="HitChanceSlider",Range={0,100},Increment=1,CurrentValue=50,Callback=function(value) HitChance=value;end});local Slider_FilledTransparency=Silent:Slider({Name="Filled FOV Transparency",Flag="FilledFOVTransparency",Range={0,100},Increment=1,CurrentValue=100,Callback=function(value) FOVTransparency=value/100 ;FOVCircle.Transparency=FOVTransparency;end});local FOVCircle=Drawing.new("Circle");FOVCircle.Color=Color3.fromRGB(148,0,211);FOVCircle.Thickness=2;FOVCircle.Radius=FOVSize;FOVCircle.Filled=false;FOVCircle.Transparency=FOVTransparency;FOVCircle.Visible=false;RunService.RenderStepped:Connect(function() FOVCircle.Position=Vector2.new(InputService:GetMouseLocation().X,InputService:GetMouseLocation().Y);FOVCircle.Radius=FOVSize;FOVCircle.Filled=FilledFOV;FOVCircle.Transparency=FOVTransparency;FOVCircle.Visible=SilentAimEnabled and FOVToggle ;end);local function GetTarget() if  not SilentAimEnabled then return nil;end local closestPlayer=nil;local minDistance=FOVSize;local mousePos=LocalPlayer:GetMouse();for _,player in ipairs(Players:GetPlayers()) do if ((player==LocalPlayer) or  not player.Character) then continue;end local TargetPart=player.Character:FindFirstChild(AimPart);if TargetPart then local screenPos,onScreen=Camera:WorldToViewportPoint(TargetPart.Position);if onScreen then local distance=(Vector2.new(mousePos.X,mousePos.Y) -Vector2.new(screenPos.X,screenPos.Y)).Magnitude;if ( not FOVToggle or (FOVToggle and (distance<minDistance))) then minDistance=distance;closestPlayer=player;end end end end return (closestPlayer and (math.random(0,100)<=HitChance) and closestPlayer) or nil ;end local VisualizeEvent=ReplicatedStorage:FindFirstChild("Events2") and ReplicatedStorage.Events2:FindFirstChild("Visualize") ;local DamageEvent=ReplicatedStorage:FindFirstChild("Events") and ReplicatedStorage.Events:FindFirstChild("ZFKLF_H") ;if (VisualizeEvent and DamageEvent) then VisualizeEvent.Event:Connect(function(...) if  not SilentAimEnabled then return;end local Args={...};local Gun=Args[4];local StartPos=Args[6];local BulletsPerShot=Args[7];local Target=GetTarget();if ( not Target or  not Target.Character) then return;end local HitPart=Target.Character:FindFirstChild(AimPart);if  not HitPart then return;end local HitPos=HitPart.Position;local Bullets={};for _=1,math.clamp( #BulletsPerShot,1,100) do table.insert(Bullets,CFrame.new(StartPos,HitPos).LookVector);end task.wait(0.005);if (DamageEvent and (typeof(DamageEvent.FireServer)=="function")) then for Index,LookVector in ipairs(Bullets) do DamageEvent:FireServer("\240\159\141\175",Gun,Args[2],Index,HitPart,HitPos,LookVector);end end if Gun:FindFirstChild("Hitmarker") then Gun.Hitmarker:Fire(HitPart);end end);else warn("[❌] Error: Events not found! Check your event names.");end local Tab2=Window:Tab({Name="Advanced ESP & Visuals"});local Divider=Tab2:Divider({Text="Advanced ESP",Side="Left"});local Divider=Tab2:Divider({Text="Player Visuals",Side="Right"});local ESP=Tab2:Section({Name="ESP",Side="Left"});local Player=Tab2:Section({Name="Player",Side="Right"});local userInputService=game:GetService("UserInputService");local player=game.Players.LocalPlayer;local Players=game:GetService("Players");local RunService=game:GetService("RunService");local Camera=game:GetService("Workspace").CurrentCamera;local LocalPlayer=Players.LocalPlayer;local Bracket=loadstring(game:HttpGet("https://raw.githubusercontent.com/AlexR32/Bracket/main/BracketV33.lua"))();local Window=Bracket:Window({Name="Galactic | Criminality Version 1.0.2",Enabled=true,Color=Color3.fromRGB(148,0,211),Size=UDim2.new(0,500,0,650),Position=UDim2.new(0.5, -248,0.5, -248)});local Tab1=Window:Tab({Name="Main Configuration"});local Divider=Tab1:Divider({Text="Aim Modification",Side="Left"});local Divider=Tab1:Divider({Text="Silent Modification",Side="Right"});local Aimlock=Tab1:Section({Name="Aimlock",Side="Left"});local Silent=Tab1:Section({Name="Silent Aim",Side="Right"});local Players=game:GetService("Players");local RunService=game:GetService("RunService");local UserInputService=game:GetService("UserInputService");local Camera=workspace.CurrentCamera;local LocalPlayer=Players.LocalPlayer;local Workspace=game:GetService("Workspace");local AimlockEnabled=false;local AimlockTarget=nil;local AimRadius=100;local HoldingMB2=false;local HighlightEnabled=false;local NotificationEnabled=true;local WallCheckEnabled=true;local IgnoreDeadPlayers=true;local WeaponBasedAdjustment=true;local TargetSwitchingEnabled=true;local WhitelistFriends=false;local AimPart="Head";local Highlight=Instance.new("Highlight");Highlight.Parent=game.CoreGui;Highlight.DepthMode=Enum.HighlightDepthMode.AlwaysOnTop;Highlight.FillColor=Color3.fromRGB(255,0,0);Highlight.OutlineColor=Color3.fromRGB(255,255,255);Highlight.FillTransparency=0.5;local AimlockToggle=Aimlock:Toggle({Name="Aimlock",CurrentValue=false,Flag="AimlockToggle",Callback=function(Value) AimlockEnabled=Value;if  not Value then Highlight.Adornee=nil;end end});local HighlightToggle=Aimlock:Toggle({Name="Highlight Target",CurrentValue=false,Flag="HighlightToggle",Callback=function(Value) HighlightEnabled=Value;if  not Value then Highlight.Adornee=nil;end end});local NotificationToggle=Aimlock:Toggle({Name="Show Notifications",CurrentValue=true,Flag="NotificationToggle",Callback=function(Value) NotificationEnabled=Value;end});local WallCheckToggle=Aimlock:Toggle({Name="Wall Check",CurrentValue=true,Flag="WallCheckToggle",Callback=function(Value) WallCheckEnabled=Value;end});local IgnoreDeadToggle=Aimlock:Toggle({Name="Ignore Dead Players",CurrentValue=true,Flag="IgnoreDeadToggle",Callback=function(Value) IgnoreDeadPlayers=Value;end});local WeaponAdjustmentToggle=Aimlock:Toggle({Name="Weapon-Based Aim Adjustment",CurrentValue=true,Flag="WeaponAdjustmentToggle",Callback=function(Value) WeaponBasedAdjustment=Value;end});local TargetSwitchingToggle=Aimlock:Toggle({Name="Target Switching",CurrentValue=true,Flag="TargetSwitchingToggle",Callback=function(Value) TargetSwitchingEnabled=Value;end});local WhitelistFriendsToggle=Aimlock:Toggle({Name="Whitelist Friends",CurrentValue=false,Flag="WhitelistFriendsToggle",Callback=function(Value) WhitelistFriends=Value;end});local AimPartDropdown=Aimlock:Dropdown({Name="Aim Part",Flag="AimPartDropdown",Side="Left",List={{Name="Head",Mode="Button",Value=false,Callback=function(Selected) AimPart="Head";end},{Name="HumanoidRootPart",Mode="Button",Value=false,Callback=function(Selected) AimPart="HumanoidRootPart";end}}});local function IsVisible(target) if  not WallCheckEnabled then return true;end local origin=Camera.CFrame.Position;local direction=(target.Position-origin).Unit * (target.Position-origin).Magnitude ;local raycastParams=RaycastParams.new();raycastParams.FilterDescendantsInstances={LocalPlayer.Character};raycastParams.FilterType=Enum.RaycastFilterType.Blacklist;local result=Workspace:Raycast(origin,direction,raycastParams);return (result==nil) or result.Instance:IsDescendantOf(target.Parent) ;end local function GetNearestTarget() local closestTarget=nil;local shortestDistance=AimRadius;for _,player in pairs(Players:GetPlayers()) do if ((player~=LocalPlayer) and player.Character and player.Character:FindFirstChild(AimPart)) then if (IgnoreDeadPlayers and player.Character:FindFirstChild("Humanoid") and (player.Character.Humanoid.Health<=0)) then continue;end if (WhitelistFriends and player:IsFriendsWith(LocalPlayer.UserId)) then continue;end local targetPart=player.Character[AimPart];if IsVisible(targetPart) then local screenPoint,onScreen=Camera:WorldToViewportPoint(targetPart.Position);local distance=(Vector2.new(screenPoint.X,screenPoint.Y) -Vector2.new(UserInputService:GetMouseLocation().X,UserInputService:GetMouseLocation().Y)).Magnitude;if (onScreen and (distance<shortestDistance)) then closestTarget=player;shortestDistance=distance;end end end end return closestTarget;end UserInputService.InputBegan:Connect(function(input,gameProcessed) if gameProcessed then return;end if (input.UserInputType==Enum.UserInputType.MouseButton2) then HoldingMB2=true;AimlockTarget=GetNearestTarget();if (HighlightEnabled and AimlockTarget and AimlockTarget.Character) then Highlight.Adornee=AimlockTarget.Character;end if (NotificationEnabled and AimlockTarget) then Bracket:Notification({Title="Aimlock Engaged",Description="Locked onto: "   .. AimlockTarget.Name ,Duration=3});end end end);UserInputService.InputEnded:Connect(function(input,gameProcessed) if (input.UserInputType==Enum.UserInputType.MouseButton2) then HoldingMB2=false;AimlockTarget=nil;Highlight.Adornee=nil;end end);RunService.RenderStepped:Connect(function() if (AimlockEnabled and HoldingMB2 and AimlockTarget and AimlockTarget.Character and AimlockTarget.Character:FindFirstChild(AimPart)) then local targetPart=AimlockTarget.Character[AimPart];Camera.CFrame=CFrame.new(Camera.CFrame.Position,targetPart.Position);end end);local Players=game:GetService("Players");local RunService=game:GetService("RunService");local ReplicatedStorage=game:GetService("ReplicatedStorage");local Camera=workspace.CurrentCamera;local LocalPlayer=Players.LocalPlayer;local InputService=game:GetService("UserInputService");local SilentAimEnabled=false;local FOVToggle=false;local FilledFOV=false;local AimPart="Head";local FOVSize=100;local HitChance=50;local FOVTransparency=100;local Toggle_SilentAim=Silent:Toggle({Name="Silent Aim",Flag="SilentAimToggle",CurrentValue=false,Callback=function(state) SilentAimEnabled=state;end});local Toggle_FOV=Silent:Toggle({Name="FOV Toggle",Flag="FOVToggle",CurrentValue=false,Callback=function(state) FOVToggle=state;end});local Toggle_FilledFOV=Silent:Toggle({Name="Filled FOV",Flag="FilledFOVToggle",CurrentValue=false,Callback=function(state) FilledFOV=state;FOVCircle.Filled=FilledFOV;end});local Dropdown_AimPart=Silent:Dropdown({Name="Aim Part",Flag="AimPartDropdown",Side="Left",List={{Name="Head",Mode="Button",Value=false,Callback=function() AimPart="Head";end},{Name="HumanoidRootPart",Mode="Button",Value=false,Callback=function() AimPart="HumanoidRootPart";end}}});local Slider_FOVSize=Silent:Slider({Name="FOV Size",Flag="FOVSizeSlider",Range={100,300},Increment=1,CurrentValue=100,Callback=function(value) FOVSize=value;FOVCircle.Radius=FOVSize;end});local Slider_HitChance=Silent:Slider({Name="Hit Chance",Flag="HitChanceSlider",Range={0,100},Increment=1,CurrentValue=50,Callback=function(value) HitChance=value;end});local Slider_FilledTransparency=Silent:Slider({Name="Filled FOV Transparency",Flag="FilledFOVTransparency",Range={0,100},Increment=1,CurrentValue=100,Callback=function(value) FOVTransparency=value/100 ;FOVCircle.Transparency=FOVTransparency;end});local FOVCircle=Drawing.new("Circle");FOVCircle.Color=Color3.fromRGB(148,0,211);FOVCircle.Thickness=2;FOVCircle.Radius=FOVSize;FOVCircle.Filled=false;FOVCircle.Transparency=FOVTransparency;FOVCircle.Visible=false;RunService.RenderStepped:Connect(function() FOVCircle.Position=Vector2.new(InputService:GetMouseLocation().X,InputService:GetMouseLocation().Y);FOVCircle.Radius=FOVSize;FOVCircle.Filled=FilledFOV;FOVCircle.Transparency=FOVTransparency;FOVCircle.Visible=SilentAimEnabled and FOVToggle ;end);local function GetTarget() if  not SilentAimEnabled then return nil;end local closestPlayer=nil;local minDistance=FOVSize;local mousePos=LocalPlayer:GetMouse();for _,player in ipairs(Players:GetPlayers()) do if ((player==LocalPlayer) or  not player.Character) then continue;end local TargetPart=player.Character:FindFirstChild(AimPart);if TargetPart then local screenPos,onScreen=Camera:WorldToViewportPoint(TargetPart.Position);if onScreen then local distance=(Vector2.new(mousePos.X,mousePos.Y) -Vector2.new(screenPos.X,screenPos.Y)).Magnitude;if ( not FOVToggle or (FOVToggle and (distance<minDistance))) then minDistance=distance;closestPlayer=player;end end end end return (closestPlayer and (math.random(0,100)<=HitChance) and closestPlayer) or nil ;end local VisualizeEvent=ReplicatedStorage:FindFirstChild("Events2") and ReplicatedStorage.Events2:FindFirstChild("Visualize") ;local DamageEvent=ReplicatedStorage:FindFirstChild("Events") and ReplicatedStorage.Events:FindFirstChild("ZFKLF_H") ;if (VisualizeEvent and DamageEvent) then VisualizeEvent.Event:Connect(function(...) if  not SilentAimEnabled then return;end local Args={...};local Gun=Args[4];local StartPos=Args[6];local BulletsPerShot=Args[7];local Target=GetTarget();if ( not Target or  not Target.Character) then return;end local HitPart=Target.Character:FindFirstChild(AimPart);if  not HitPart then return;end local HitPos=HitPart.Position;local Bullets={};for _=1,math.clamp( #BulletsPerShot,1,100) do table.insert(Bullets,CFrame.new(StartPos,HitPos).LookVector);end task.wait(0.005);if (DamageEvent and (typeof(DamageEvent.FireServer)=="function")) then for Index,LookVector in ipairs(Bullets) do DamageEvent:FireServer("\240\159\141\175",Gun,Args[2],Index,HitPart,HitPos,LookVector);end end if Gun:FindFirstChild("Hitmarker") then Gun.Hitmarker:Fire(HitPart);end end);else warn("[❌] Error: Events not found! Check your event names.");end local Tab2=Window:Tab({Name="Advanced ESP & Visuals"});local Divider=Tab2:Divider({Text="Advanced ESP",Side="Left"});local Divider=Tab2:Divider({Text="Player Visuals",Side="Right"});local ESP=Tab2:Section({Name="ESP",Side="Left"});local Player=Tab2:Section({Name="Player",Side="Right"});local Players=game:GetService("Players");local camera=workspace.CurrentCamera;local localPlayer=Players.LocalPlayer;local cache={};local ESP_SETTINGS={BoxOutlineColor=Color3.fromRGB(0,0,0),BoxColor=Color3.fromRGB(255,255,255),NameColor=Color3.fromRGB(255,255,255),HealthBarBackgroundColor=Color3.fromRGB(255,0,0),CharSize=Vector2.new(4,6),Enabled=false,ShowBox=true,ShowName=true,ShowHealthBar=false,ShowLevel=true,ShowWeapon=true};local function create(class,properties) local drawing=Drawing.new(class);for property,value in pairs(properties) do drawing[property]=value;end return drawing;end local function createEsp(player) local esp={boxOutline=create("Square",{Color=ESP_SETTINGS.BoxOutlineColor,Thickness=3,Filled=false}),box=create("Square",{Color=ESP_SETTINGS.BoxColor,Thickness=1,Filled=false}),name=create("Text",{Color=ESP_SETTINGS.NameColor,Outline=true,Center=true,Size=13}),healthBarBackground=create("Square",{Color=ESP_SETTINGS.HealthBarBackgroundColor,Filled=true}),healthBar=create("Square",{Color=Color3.fromRGB(0,255,0),Filled=true}),distance=create("Text",{Color=Color3.fromRGB(255,255,255),Outline=true,Center=true,Size=13}),level=create("Text",{Color=Color3.fromRGB(255,255,0),Outline=true,Center=true,Size=13}),weapon=create("Text",{Color=Color3.fromRGB(255,165,0),Outline=true,Center=true,Size=13})};cache[player]=esp;end local function removeEsp(player) local esp=cache[player];if  not esp then return;end for _,drawing in pairs(esp) do drawing:Remove();end cache[player]=nil;end local function updateHealthBar(esp,humanoid) local health=humanoid.Health;local maxHealth=humanoid.MaxHealth;local healthPercentage=health/maxHealth ;local healthColor;if (healthPercentage>=0.75) then healthColor=Color3.fromRGB(0,255,0);elseif (healthPercentage>=0.25) then healthColor=Color3.fromRGB(255,255,0);else healthColor=Color3.fromRGB(255,0,0);end esp.healthBar.Color=healthColor;local healthBarWidth=4;local healthBarHeight=esp.healthBarBackground.Size.Y;esp.healthBar.Size=Vector2.new(healthBarWidth,healthBarHeight * healthPercentage );end local function updateEsp() for player,esp in pairs(cache) do local character=player.Character;if (character and ESP_SETTINGS.Enabled) then local humanoid=character:FindFirstChildOfClass("Humanoid");local rootPart=character:FindFirstChild("HumanoidRootPart");if (rootPart and humanoid) then local position,onScreen=camera:WorldToViewportPoint(rootPart.Position);if onScreen then local hrp2D=camera:WorldToViewportPoint(rootPart.Position);local charSize=(camera:WorldToViewportPoint(rootPart.Position-Vector3.new(0,3,0) ).Y-camera:WorldToViewportPoint(rootPart.Position + Vector3.new(0,2.6,0) ).Y)/2 ;local boxSize=Vector2.new(math.floor(charSize * 1.8 ),math.floor(charSize * 1.9 ));local boxPosition=Vector2.new(math.floor(hrp2D.X-((charSize * 1.8)/2) ),math.floor(hrp2D.Y-((charSize * 1.6)/2) ));if ESP_SETTINGS.ShowName then esp.name.Visible=true;esp.name.Text=player.Name;esp.name.Position=Vector2.new((boxSize.X/2) + boxPosition.X ,boxPosition.Y-16 );else esp.name.Visible=false;end if ESP_SETTINGS.ShowBox then esp.boxOutline.Size=boxSize;esp.boxOutline.Position=boxPosition;esp.box.Size=boxSize;esp.box.Position=boxPosition;esp.box.Visible=true;esp.boxOutline.Visible=true;else esp.box.Visible=false;esp.boxOutline.Visible=false;end if ESP_SETTINGS.ShowHealthBar then local healthBarHeight=boxSize.Y;local healthBarPosition=Vector2.new(boxPosition.X + boxSize.X + 2 ,boxPosition.Y);esp.healthBarBackground.Size=Vector2.new(4,healthBarHeight);esp.healthBarBackground.Position=healthBarPosition;esp.healthBarBackground.Visible=true;updateHealthBar(esp,humanoid);esp.healthBar.Position=healthBarPosition;esp.healthBar.Visible=true;else esp.healthBarBackground.Visible=false;esp.healthBar.Visible=false;end if ESP_SETTINGS.ShowDistance then local distance=math.floor((localPlayer.Character.HumanoidRootPart.Position-rootPart.Position).Magnitude);esp.distance.Visible=true;esp.distance.Text="Distance: "   .. distance   .. " studs" ;esp.distance.Position=Vector2.new(boxPosition.X-40 ,boxPosition.Y-16 );else esp.distance.Visible=false;end if ESP_SETTINGS.ShowLevel then local level=player:FindFirstChild("leaderstats") and player.leaderstats:FindFirstChild("Level") ;if level then esp.level.Visible=true;esp.level.Text="Level: "   .. level.Value ;esp.level.Position=Vector2.new(boxPosition.X + (boxSize.X/2) ,boxPosition.Y + (boxSize.Y/2) );else esp.level.Visible=false;end else esp.level.Visible=false;end if ESP_SETTINGS.ShowWeapon then local tool=player.Backpack and player.Backpack:FindFirstChildOfClass("Tool") ;if tool then esp.weapon.Visible=true;esp.weapon.Text=tool.Name;esp.weapon.Position=Vector2.new(boxPosition.X + (boxSize.X/2) ,boxPosition.Y + boxSize.Y + 16 );else esp.weapon.Visible=false;end else esp.weapon.Visible=false;end else for _,drawing in pairs(esp) do drawing.Visible=false;end end else for _,drawing in pairs(esp) do drawing.Visible=false;end end else for _,drawing in pairs(esp) do drawing.Visible=false;end end end end local Toggle=ESP:Toggle({Name="Enable ESP",Flag="EnableESP",Side="Left",Value=false,Callback=function(Toggle_Bool) ESP_SETTINGS.Enabled=Toggle_Bool;end});local NameToggle=ESP:Toggle({Name="Show Player Name",Flag="ShowPlayerName",Side="Left",Value=true,Callback=function(Toggle_Bool) ESP_SETTINGS.ShowName=Toggle_Bool;end});local HealthBarToggle=ESP:Toggle({Name="Show Health Bar",Flag="ShowPlayerHealthBar",Side="Left",Value=false,Callback=function(Toggle_Bool) ESP_SETTINGS.ShowHealthBar=Toggle_Bool;end});local LevelToggle=ESP:Toggle({Name="Show Player Level",Flag="ShowPlayerLevel",Side="Left",Value=true,Callback=function(Toggle_Bool) ESP_SETTINGS.ShowLevel=Toggle_Bool;end});local WeaponToggle=ESP:Toggle({Name="Show Weapon",Flag="ShowPlayerWeapon",Side="Left",Value=true,Callback=function(Toggle_Bool) ESP_SETTINGS.ShowWeapon=Toggle_Bool;end});Players.PlayerAdded:Connect(function(player) if (player~=localPlayer) then createEsp(player);end end);Players.PlayerRemoving:Connect(function(player) removeEsp(player);end);for _,player in ipairs(Players:GetPlayers()) do if (player~=localPlayer) then createEsp(player);end end game:GetService("RunService").RenderStepped:Connect(function() updateEsp();end);local Players=game:GetService("Players");local camera=workspace.CurrentCamera;local localPlayer=Players.LocalPlayer;local cache={};local ESP_SETTINGS={ShowTracer=false,TracerColor=Color3.fromRGB(255,255,255)};local function create(class,properties) local drawing=Drawing.new(class);for property,value in pairs(properties) do drawing[property]=value;end return drawing;end local function createTracer(player) local tracer={line=create("Line",{Color=ESP_SETTINGS.TracerColor,Thickness=1,Transparency=1})};cache[player]=tracer;end local function removeTracer(player) local tracer=cache[player];if  not tracer then return;end tracer.line:Remove();cache[player]=nil;end local function updateTracer() for player,tracer in pairs(cache) do local character=player.Character;if (character and ESP_SETTINGS.ShowTracer) then local humanoidRootPart=character:FindFirstChild("HumanoidRootPart");if humanoidRootPart then local position,onScreen=camera:WorldToViewportPoint(humanoidRootPart.Position);if onScreen then tracer.line.From=Vector2.new(camera.ViewportSize.X/2 ,camera.ViewportSize.Y/2 );tracer.line.To=Vector2.new(position.X,position.Y);tracer.line.Visible=true;else tracer.line.Visible=false;end end else tracer.line.Visible=false;end end end local Toggle=ESP:Toggle({Name="Enable Tracer",Flag="EnableTracer",Side="Left",Value=false,Callback=function(Toggle_Bool) ESP_SETTINGS.ShowTracer=Toggle_Bool;end});Players.PlayerAdded:Connect(function(player) if (player~=localPlayer) then createTracer(player);end end);Players.PlayerRemoving:Connect(function(player) removeTracer(player);end);for _,player in ipairs(Players:GetPlayers()) do if (player~=localPlayer) then createTracer(player);end end game:GetService("RunService").RenderStepped:Connect(function() updateTracer();end);local Players=game:GetService("Players");local camera=workspace.CurrentCamera;local localPlayer=Players.LocalPlayer;local cache={};local ESP_SETTINGS={ShowHighlight=false,HighlightColor=Color3.fromRGB(148,0,211)};local function create(class,properties) local drawing=Drawing.new(class);for property,value in pairs(properties) do drawing[property]=value;end return drawing;end local Players=game:GetService("Players");local camera=workspace.CurrentCamera;local localPlayer=Players.LocalPlayer;local cache={};local ESP_SETTINGS={ShowHighlight=false,HighlightColor=Color3.fromRGB(148,0,211)};local function create(class,properties) local drawing=Drawing.new(class);for property,value in pairs(properties) do drawing[property]=value;end return drawing;end local Players=game:GetService("Players");local localPlayer=Players.LocalPlayer;local highlightEnabled=false;local highlightSettings={Color=Color3.fromRGB(148,0,211),Enabled=false};local highlightToggle=ESP:Toggle({Name="Highlight Player",Flag="HighlightPlayer",Side="Left",Value=false,Callback=function(toggleValue) highlightSettings.Enabled=toggleValue;end});local function highlightPlayer(player) if highlightSettings.Enabled then local character=player.Character;if (character and (player~=localPlayer)) then local highlight=character:FindFirstChild("Highlight");if  not highlight then highlight=Instance.new("Highlight");highlight.Parent=character;end highlight.FillColor=highlightSettings.Color;highlight.FillTransparency=0.5;highlight.OutlineColor=highlightSettings.Color;highlight.OutlineTransparency=0;end else local character=player.Character;if character then local highlight=character:FindFirstChild("Highlight");if highlight then highlight:Destroy();end end end end Players.PlayerAdded:Connect(function(player) player.CharacterAdded:Connect(function() highlightPlayer(player);end);end);Players.PlayerRemoving:Connect(function(player) if player.Character then local highlight=player.Character:FindFirstChild("Highlight");if highlight then highlight:Destroy();end end end);game:GetService("RunService").RenderStepped:Connect(function() for _,player in ipairs(Players:GetPlayers()) do highlightPlayer(player);end end); end
